function buildWidget(weatherWidgetClass){


    console.log("Start to fetch data from Forecast.io website using Ajax");
//    var xhr = $.ajax({
//    url :  constructURL(),
//    dataType :"jsonp",
//    //xhrFields: {
//    //    withCredentials: true
//    //},
//    type: "GET"}).done( function( data ){
//
//        // this function will run if the AJAX call is successful
//        console.log("forecast data is loaded succsfully");
//        console.log( data );
//        createDailyWeatherPanel(cssWeatherClass , data);
//     }).fail( function( ){
//
//        //this function will run if the AJAX call fails for any reason.
//        console.log("failed to load forecast data");
//        console.log( xhr.status );
//
//        //TODO: handle error cases.
//
//     });

    createDailyWeatherPanel(weatherWidgetClass , data);
    //createHourlyWeatherPanel(data);
}

function constructURL(){
    var FORECAST_API_KEY="28595388f228499527db3647095809fc";
    var ALGONQUIN_LATITUDE = "45.348391";
    var ALGONQUIN_LONGITUDE = "-75.757045";

    /* Get the weather in SI metric: Celsius, mm , kPa ... etc*/
    var UNITS = "units=ca";

    var url = "https://api.forecast.io/forecast/" +
        FORECAST_API_KEY + "/" +
        ALGONQUIN_LATITUDE + "," +
        ALGONQUIN_LONGITUDE +"?" +
        UNITS
    ;

    return url;
}

function wdgtSetIcon( canvasID, weatherState){
    /* TODO: remove this comment line:
    In html doc , you must have:
    <canvas id="widget-forecast-icon" width="128" height="128"></canvas>*/

    console.debug("canvasID is: ", canvasID);
    console.debug("weatherState is: ", weatherState);

    /*  Skycons is a set of ten animated weather glyphs, procedurally generated by JavaScript using the
        HTML5 canvas tag. Skycons were designed for Forecast.io */
    var skycons = new Skycons();

    /* According to thier original exmaples: http://darkskyapp.github.io/skycons/
       Canvas has been created using jQuery and set to an id.*/
    skycons.set(canvasID, weatherState);

    /* Start the icon animation. */
    skycons.play();
}

function createDailyWeatherPanel(weatherWidgetClass , data){

    /*  1. Create new div element and set its class to panel class.
        2. Set click listener for daily panel div element.
        3. append panel div to current weather forecast div*/
    var $dailyPanel = $("<div></div>").addClass("daily-panel").
//             click(onDailyPanelClicked).
             appendTo($(weatherWidgetClass));;

    /* Create paragraph for today*/
    $dailyPanel.append('<p class="today">TODAY</p>');

    /* 1. Create icon div for average weather of the whole.
       2. Append it to daily panel*/
    $dailyWeatherIcon = $("<div></div>").addClass("today-icon-container").
                        append('<canvas id="widget-forecast-today-icon" width="36" height="36"\
                               </canvas>').
                        appendTo($dailyPanel);
    /* Set icon of weather using skycons */
    wdgtSetIcon("widget-forecast-today-icon", data.daily.data[0].icon);

    /* Add today weather summary and remove last full-stop or period*/
    $dailyPanel.append('<p class="summary">' +data.daily.data[0].summary.slice(0,-1) +'</p>');

    /* Add circular button to indicate that this section is expandable*/
    $button = $("<div></div>").addClass("circular-button").
                append('<span class="fold">+</span>').
                append('<span class="expand">-</span>').
                appendTo($dailyPanel).
                click(onDailyPanelClicked);

    /* create a container for inner hourly panel inside the daily panel.*/
    $dailyPanel.append('<div id="hourly-panel"></div>');
}

function onDailyPanelClicked(){
    console.log("dialy panel has been clicked");

    /* Toggle sliding direction for hourly panel inside the daily panel. As well as,
       the visibilty of child spans for the circular button. */
    $("#hourly-panel").slideToggle( "slow" );
    $(".expand").toggle();
    $(".fold").toggle();

    /* toggle visibilty of child nodes for hourly panel. Note that this function is called after
       already togggling the values of expand/fold classes. */
    toggleFolding();
}

function toggleFolding(){
    if ("none" === $(".fold").css("display")){
        console.log("hourly panel expansion is done");
        /* create all child nodes for the hourly weather panel. */
        createHourlyWeatherPanel(data);
    }else{
        console.log("hourly panel folding is done");
        /* Remove all child nodes of hourly panel. */
        $("#hourly-panel").empty();
    }
}

function createHourlyWeatherPanel(data){
    var $slider = $('<div id="slider"></div>')
                    .appendTo($("#hourly-panel"));

    /* create a slider using jquery-ui library for 24 hour of any any day*/
    $slider.slider(
        {
            min   : 0,  // This maps to 12am (mid-night)
            max   : 23, // This maps to 11 pm
            value : 10, // TODO: set this value according to current time of the day.

            /* set required listeners for slider, upon creation, sliding action and changing the
               value.*/
            create: onCreateSlider,
            change: onChangeSliderVlue,
            slide : onSlidingover
        });

    /* create hours ticks dashes for even and odd hours*/
    $hoursTick = $('<div class="hour-ticks"></div>').appendTo($("#hourly-panel"));
    for (var i=0; i< 24; i++){
        $hoursTick.append('<span class="'+getHoursTickClass(i)+'"></span>');
    }
}

function getHoursTickClass(i){
    return (i%2==0)? "even":"odd";
}

function onCreateSlider(event, ui){
    console.log("slider has been created with value = ", $(this).slider("option", "value"));
    /*To set slider value at run-time use: */
    //$( "#sliderID" ).slider( "option", "value", 10 );
}

function onChangeSliderVlue(event ,ui){
    console.log("value after sliding becomes: ", ui.value);
}

function onSlidingover(event, ui){
    console.log("sliding value is ", ui.value);
}
